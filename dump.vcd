$date
	Thu Dec 10 02:29:03 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module shift $end
$var wire 6 ! in [5:0] $end
$var wire 6 " out [5:0] $end
$var reg 8 # temp [7:0] $end
$upscope $end
$scope module topmodule_t $end
$var wire 1 $ zero $end
$var wire 5 % wrRegis [4:0] $end
$var wire 32 & shiftBranch [31:0] $end
$var wire 1 ' selBranch $end
$var wire 1 ( regwrite $end
$var wire 1 ) regdst $end
$var wire 32 * outmux [31:0] $end
$var wire 32 + outALU [31:0] $end
$var wire 1 , memwrite $end
$var wire 1 - memtoreg $end
$var wire 1 . memread $end
$var wire 32 / jumpAddress [31:0] $end
$var wire 1 0 jump $end
$var wire 1 1 jal $end
$var wire 32 2 instruction [31:0] $end
$var wire 32 3 dataOut [31:0] $end
$var wire 32 4 data2 [31:0] $end
$var wire 32 5 data1 [31:0] $end
$var wire 32 6 bitOutSignExtened [31:0] $end
$var wire 1 7 alusrc $end
$var wire 2 8 aluop [1:0] $end
$var wire 32 9 address [31:0] $end
$var wire 32 : addAddress [31:0] $end
$var wire 32 ; PC4 [31:0] $end
$var wire 4 < ALUCon [3:0] $end
$var reg 1 = clk $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0=
b10 <
b10100100 ;
b10101100 :
b10100000 9
b0 8
17
b10 6
b0 5
b10 4
b0 3
b100000000010000000000000000010 2
01
00
b1000000000000000001000 /
0.
0-
0,
b10 +
b10 *
0)
1(
0'
b1000 &
b1000 %
0$
bz00 #
bz00 "
bz !
$end
#5
b1001 %
b10101000 ;
b1001000000000000001000 /
b10 4
b100000000010010000000000000010 2
b10110000 :
b10100100 9
1=
#10
0=
#15
1'
1$
b110 <
b0 %
b0 +
0(
1)
07
b1 8
b10110100 ;
b10 5
b10001000010010000000000000010 2
b10110100 :
b10101000 9
1=
#20
0=
#25
0$
b10 <
b1101 %
0'
b11 +
17
0)
1(
b0 8
b1100 &
b11 *
b10111000 ;
b1101000000000000001100 /
b11 6
b11 4
b0 5
b100000000011010000000000000011 2
b11000100 :
b10110100 9
1=
#30
0=
#35
b10 +
b1000 &
b10 *
b1000 %
b10111100 ;
b1000000000000000001000 /
b10 6
b10 4
b100000000010000000000000000010 2
b11000100 :
b10111000 9
1=
#40
0=
#45
b0 %
b11111010011 +
0(
1,
1)
17
b0 8
b11111010000 *
b1111101000000 &
b11000000 ;
b10101000000001111101000000 /
b11111010000 6
b11 5
b10101101101010000000011111010000 2
b10000000000000 :
b10111100 9
1=
#50
0=
#55
b1000 %
b10 3
1-
0)
1.
1(
0,
17
b0 8
b11000100 ;
b10001101101010000000011111010000 2
b10000000000100 :
b11000000 9
1=
#60
0=
#65
1$
b0 <
b0 3
b0 +
11
1)
0-
0.
07
b10 8
b10101100 &
b0 *
b11111 %
b11001000 ;
b10101100 /
b101011 6
b0 4
b0 5
b1100000000000000000000101011 2
b101110100 :
b11000100 9
1=
#70
0=
#75
b0 %
01
b0 &
b11001100 ;
b0 /
b0 6
b0 2
b11001100 :
b11001000 9
1=
#80
0=
#85
b11010000 ;
b11010000 :
b11001100 9
1=
#90
0=
#95
b11010100 ;
b11010100 :
b11010000 9
1=
#100
0=
